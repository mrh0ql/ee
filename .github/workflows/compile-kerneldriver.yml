name: Build Kernel Driver

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. Check out your code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Make MSBuild available
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      # 3. Install the Windows Driver Kit (WDK 10)
      - name: Install WDK 10 via Chocolatey
        run: choco install windowsdriverkit10 -y

      # 4. Restore any NuGet packages (including WDK NuGet if you use it)
      - name: Restore NuGet packages
        run: nuget restore MyDriver.sln

      # 5. Build the solution with MSBuild in Release mode
      - name: Build solution with MSBuild
        run: |
          msbuild MyDriver.sln \
            /t:Build \
            /p:Configuration=Release \
            /m

      # 6. Run clang-tidy static analysis (auto-fixes simple issues)
      - name: Run clang-tidy static analysis
        run: |
          if where clang-tidy; then
            clang-tidy src/**/*.cpp --fix -- -I.
          else
            echo "clang-tidy not installed; skipping static analysis"
          fi

      # 7. Package your driver artifacts into a ZIP
      - name: Package driver artifacts
        run: |
          mkdir -p release-artifacts
          Compress-Archive -Path \
            build\Release\*.sys, driver.inf, loader.exe, README.md \
            -DestinationPath release-artifacts/DriverPackage.zip

      # 8. Upload the ZIP as a workflow artifact
      - name: Upload driver package
        uses: actions/upload-artifact@v4
        with:
          name: DriverPackage
          path: release-artifacts/DriverPackage.zip
          retention-days: 7
